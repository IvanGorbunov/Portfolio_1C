
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// очистка движений
	Движения.ОстаткиНоменклатуры.Записать();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	РасходнаяНакладнаяСписокНоменклатуры.Договор КАК Договор,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТТовары
		|ИЗ
		|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура,
		|	РасходнаяНакладнаяСписокНоменклатуры.Договор
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТТовары.Номенклатура КАК Номенклатура,
		|	ВТТовары.Договор КАК Договор
		|ИЗ
		|	ВТТовары КАК ВТТовары";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	// блокировки
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Договор", "Договор");
	Блокировка.Заблокировать();
	
	// получение остатков
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиНоменклатурыОстатки.Договор КАК Договор,
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ОстаткиНоменклатурыОстатки.СуммаОстаток КАК СуммаОстаток
		|ПОМЕСТИТЬ ВТОстатки
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|			&Момент,
		|			(Номенклатура, Договор) В
		|				(ВЫБРАТЬ
		|					ВТТовары.Номенклатура КАК Номенклатура,
		|					ВТТовары.Договор КАК Договор
		|				ИЗ
		|					ВТТовары КАК ВТТовары)) КАК ОстаткиНоменклатурыОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТТовары.Номенклатура КАК Номенклатура,
		|	ВТТовары.Договор КАК Договор,
		|	ВТТовары.Договор.Процент КАК Процент,
		|	ВТТовары.Количество КАК Количество,
		|	ВТТовары.Сумма КАК Сумма,
		|	ЕСТЬNULL(ВТОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ВТОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ВТОстатки.Номенклатура.Представление КАК НоменклатураПредставление
		|ИЗ
		|	ВТТовары КАК ВТТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстатки КАК ВТОстатки
		|		ПО ВТТовары.Номенклатура = ВТОстатки.Номенклатура
		|			И ВТТовары.Договор = ВТОстатки.Договор";
	
	Запрос.УстановитьПараметр("Момент", МоментВремени());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// регистр ОстаткиНоменклатуры Расход
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	
	// регистр Продажи Приход
	Движения.Продажи.Записывать = Истина;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.Количество > ВыборкаДетальныеЗаписи.КоличествоОстаток Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "По товару " + ВыборкаДетальныеЗаписи.НоменклатураПредставление + 
					" не хватает " + (ВыборкаДетальныеЗаписи.Количество > ВыборкаДетальныеЗаписи.КоличествоОстаток);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		
		// !!! ОШИБКА !!!
		//СредняяЦенаПокупки = Окр(ВыборкаДетальныеЗаписи.СуммаОстаток / ВыборкаДетальныеЗаписи.КоличествоОстаток, 2);
		//СредняяЦенаПродажи = Окр(ВыборкаДетальныеЗаписи.Сумма / ВыборкаДетальныеЗаписи.Количество, 2);
		//Если СредняяЦенаПокупки > СредняяЦенаПродажи Тогда
		
		СуммаДляКонтроля = ?(ВыборкаДетальныеЗаписи.КоличествоОстаток = ВыборкаДетальныеЗаписи.Количество, 
								ВыборкаДетальныеЗаписи.СуммаОстаток,
								ВыборкаДетальныеЗаписи.СуммаОстаток / ВыборкаДетальныеЗаписи.КоличествоОстаток * ВыборкаДетальныеЗаписи.Количество);
		
		Если СуммаДляКонтроля > ВыборкаДетальныеЗаписи.Сумма Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "По товару " + ВыборкаДетальныеЗаписи.НоменклатураПредставление + 
					" сумма продажи меньше закупочной на " + (СуммаДляКонтроля - ВыборкаДетальныеЗаписи.Сумма);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		
		Если НЕ Отказ Тогда
			
			Движение = Движения.ОстаткиНоменклатуры.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.Договор = ВыборкаДетальныеЗаписи.Договор;
			Движение.Количество = ВыборкаДетальныеЗаписи.Количество;
			Движение.Сумма = ВыборкаДетальныеЗаписи.Количество / ВыборкаДетальныеЗаписи.КоличествоОстаток * ВыборкаДетальныеЗаписи.СуммаОстаток;
			
			Движение = Движения.Продажи.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.Договор = ВыборкаДетальныеЗаписи.Договор;
			Движение.Количество = ВыборкаДетальныеЗаписи.Количество;
			Движение.Сумма = ВыборкаДетальныеЗаписи.Сумма;
			Движение.СуммаВыплаты = ВыборкаДетальныеЗаписи.Сумма * ВыборкаДетальныеЗаписи.Процент / 100;
			
			
		КонецЕсли;
		
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры
