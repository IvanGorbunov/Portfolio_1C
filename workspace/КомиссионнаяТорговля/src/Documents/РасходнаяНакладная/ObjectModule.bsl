
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// очистка движений
	Движения.ОстаткиНоменклатуры.Записать();
	Движения.Управленческий.Записать();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	РасходнаяНакладнаяСписокНоменклатуры.ДоговорКомиссии КАК ДоговорКомиссии,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТТовары
		|ИЗ
		|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура,
		|	РасходнаяНакладнаяСписокНоменклатуры.ДоговорКомиссии
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	ДоговорКомиссии
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТТовары.Номенклатура КАК Номенклатура,
		|	ВТТовары.ДоговорКомиссии КАК Договор
		|ИЗ
		|	ВТТовары КАК ВТТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТТовары.Номенклатура КАК Номенклатура
		|ИЗ
		|	ВТТовары КАК ВТТовары";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	// блокировки
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
	ЭлементБлокировки.УстановитьЗначение("Организация", Организация);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатыЗапроса[1];
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Договор", "Договор");
		
	ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Управленческий");
	ЭлементБлокировки.УстановитьЗначение("Организация", Организация);
	ЭлементБлокировки.УстановитьЗначение("Счет", ПланыСчетов.Управленческий.Товары);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатыЗапроса[2];
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура, "Номенклатура");
	
	Блокировка.Заблокировать();
	
	// получение остатков
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиНоменклатурыОстатки.Договор КАК Договор,
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ОстаткиНоменклатурыОстатки.СуммаОстаток КАК СуммаОстаток
		|ПОМЕСТИТЬ ВТОстатки
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|			&Момент,
		|			Организация = &Организация
		|				И (Номенклатура, Договор) В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТТовары.Номенклатура КАК Номенклатура,
		|						ВТТовары.ДоговорКомиссии КАК Договор
		|					ИЗ
		|						ВТТовары КАК ВТТовары)) КАК ОстаткиНоменклатурыОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УправленческийОстатки.Субконто1 КАК Номенклатура,
		|	УправленческийОстатки.СуммаОстаток КАК СуммаОстаток,
		|	УправленческийОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ПОМЕСТИТЬ ВТОстаткиУправленческий
		|ИЗ
		|	РегистрБухгалтерии.Управленческий.Остатки(
		|			&Момент,
		|			Счет = &СчетТовары,
		|			&Субконто,
		|			Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТТовары.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВТТовары КАК ВТТовары)) КАК УправленческийОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТТовары.Номенклатура КАК Номенклатура,
		|	ВТТовары.ДоговорКомиссии КАК ДоговорКомиссии,
		|	ВТТовары.ДоговорКомиссии.Процент КАК Процент,
		|	ВТТовары.Количество КАК Количество,
		|	ВТТовары.Сумма КАК Сумма,
		|	ЕСТЬNULL(ВТОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ВТОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(ВТОстаткиУправленческий.КоличествоОстаток, 0) КАК КоличествоОстатокУпр,
		|	ЕСТЬNULL(ВТОстаткиУправленческий.СуммаОстаток, 0) КАК СуммаОстатокУпр,
		|	ВТОстатки.Номенклатура.Представление КАК НоменклатураПредставление
		|ИЗ
		|	ВТТовары КАК ВТТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстатки КАК ВТОстатки
		|		ПО ВТТовары.Номенклатура = ВТОстатки.Номенклатура
		|			И ВТТовары.ДоговорКомиссии = ВТОстатки.Договор
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиУправленческий КАК ВТОстаткиУправленческий
		|		ПО ВТТовары.Номенклатура = ВТОстаткиУправленческий.Номенклатура
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Сумма),
		|	СУММА(КоличествоОстаток),
		|	СУММА(СуммаОстаток),
		|	СУММА(КоличествоОстатокУпр),
		|	СУММА(СуммаОстатокУпр)
		|ПО
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Момент", МоментВремени());
	
	МассивСубконто = Новый Массив;
	МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	Запрос.УстановитьПараметр("Субконто", МассивСубконто);
	
	Запрос.УстановитьПараметр("СчетТовары", ПланыСчетов.Управленческий.Товары);
		
	РезультатЗапроса = Запрос.Выполнить();
	
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
	Движения.Управленческий.Записывать = Истина;
	
	ВыборкаНоменклатуры = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатуры.Следующий() Цикл
		
		
		// проверка количества на остатках
		Если ВыборкаНоменклатуры.Количество > ВыборкаНоменклатуры.КоличествоОстатокУпр Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "По товару " + ВыборкаНоменклатуры.НоменклатураПредставление + 
				" не хватает " + (ВыборкаНоменклатуры.Количество - ВыборкаНоменклатуры.КоличествоОстатокУпр);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		
		Если НЕ Отказ Тогда
			ВыборкаДетальныеЗаписи = ВыборкаНоменклатуры.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				// проверка количества на остатках по договору
				Если ВыборкаДетальныеЗаписи.Количество > ВыборкаДетальныеЗаписи.КоличествоОстаток Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "По товару " + ВыборкаДетальныеЗаписи.НоменклатураПредставление + 
						" полученному по договору: " + ВыборкаДетальныеЗаписи.ДоговорКомиссии + 
						" не хватает " + (ВыборкаДетальныеЗаписи.Количество - ВыборкаДетальныеЗаписи.КоличествоОстаток);
					Сообщение.Сообщить();
					Отказ = Истина;
				КонецЕсли;
				
				// рассчет контролируемой суммы
				СуммаДляКонтроля = ?(ВыборкаДетальныеЗаписи.КоличествоОстаток = ВыборкаДетальныеЗаписи.Количество, 
					ВыборкаДетальныеЗаписи.СуммаОстаток,
					ВыборкаДетальныеЗаписи.СуммаОстаток / ВыборкаДетальныеЗаписи.КоличествоОстаток * ВыборкаДетальныеЗаписи.Количество);
				
				// проверка суммы
				Если СуммаДляКонтроля > ВыборкаДетальныеЗаписи.Сумма Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "По товару " + ВыборкаДетальныеЗаписи.НоменклатураПредставление + 
						" сумма продажи меньше закупочной на " + (СуммаДляКонтроля - ВыборкаДетальныеЗаписи.Сумма);
					Сообщение.Сообщить();
					Отказ = Истина;
				КонецЕсли;
				
				Если НЕ Отказ Тогда
					
					// списание с остатков
					Движение = Движения.ОстаткиНоменклатуры.Добавить();
					Движение.ВидДвижения  = ВидДвиженияНакопления.Расход;
					Движение.Период       = Дата;
					Движение.Организация  = Организация;
					Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
					Движение.Договор      = ВыборкаДетальныеЗаписи.ДоговорКомиссии;
					Движение.Количество   = ВыборкаДетальныеЗаписи.Количество;
					
					СуммаСписания = ?(ВыборкаДетальныеЗаписи.Количество = ВыборкаДетальныеЗаписи.КоличествоОстаток, 
							ВыборкаДетальныеЗаписи.СуммаОстаток, 
							ВыборкаДетальныеЗаписи.Количество / ВыборкаДетальныеЗаписи.КоличествоОстаток * ВыборкаДетальныеЗаписи.СуммаОстаток);
					Движение.Сумма        = СуммаСписания;
					
					// добавление продажи
					Движение = Движения.Продажи.Добавить();
					Движение.ВидДвижения  = ВидДвиженияНакопления.Приход;
					Движение.Период       = Дата;
					Движение.Организация  = Организация;
					Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
					Движение.Договор      = ВыборкаДетальныеЗаписи.ДоговорКомиссии;
					Движение.Количество   = ВыборкаДетальныеЗаписи.Количество;
					Движение.Сумма        = ВыборкаДетальныеЗаписи.Сумма;
					Движение.СуммаВыплаты = ВыборкаДетальныеЗаписи.Сумма * ВыборкаДетальныеЗаписи.Процент / 100;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если НЕ Отказ Тогда
				
				// списание товаров
				Движение = Движения.Управленческий.Добавить();
				Движение.Период = Дата;
				Движение.Организация = Организация;
				
				// Дт
				Движение.СчетДт = ПланыСчетов.Управленческий.ПрибылиУбытки;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ВыборкаНоменклатуры.Номенклатура;
							
				// Кт
				Движение.СчетКт = ПланыСчетов.Управленческий.Товары;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ВыборкаНоменклатуры.Номенклатура;
				
				Движение.Количество = ВыборкаНоменклатуры.Количество;
				
				СуммаСписания = ?(ВыборкаНоменклатуры.Количество = ВыборкаНоменклатуры.КоличествоОстатокУпр,
						ВыборкаНоменклатуры.СуммаОстатокУпр,
						ВыборкаНоменклатуры.Количество / ВыборкаНоменклатуры.КоличествоОстатокУпр * ВыборкаНоменклатуры.СуммаОстатокУпр);
				Движение.Сумма = СуммаСписания;
								
				// продажа
				Движение = Движения.Управленческий.Добавить();
				Движение.Период = Дата;
				Движение.Организация = Организация;
				
				// Дт
				Движение.СчетДт = ПланыСчетов.Управленческий.Покупатели;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Договоры] = Договор;
				
				// Кт
				Движение.СчетКт = ПланыСчетов.Управленческий.ПрибылиУбытки;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ВыборкаНоменклатуры.Номенклатура;
				
				Движение.Сумма = ВыборкаНоменклатуры.Сумма;
				
			КонецЕсли;
			
		КонецЕсли;
			
	КонецЦикла;
		
КонецПроцедуры
